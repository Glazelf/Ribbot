using System;
using CrossBot.Core;
using NHSE.Core;

namespace CrossBot.SysBot
{
    /// <summary>
    /// Configuration for the <see cref="Bot"/> related to dropping items.
    /// </summary>
    [Serializable]
    public class DropBotConfig : IConfigItem
    {
        private int _maxDropCount = 7;

        /// <summary> When enabled, bot picks up items when idle for <see cref="NoActivitySeconds"/> seconds. </summary>
        public bool AutoClean { get; set; }

        /// <summary> When <see cref="AutoClean"/> is enabled, the bot will pick up items after the a certain amount of inactive time. </summary>
        public int NoActivitySeconds { get; set; } = 60;

        /// <summary> Amount of times to perform a pick-up item action. </summary>
        public int MaxDropCount
        {
            get => _maxDropCount;
            set => _maxDropCount = Math.Max(1, Math.Min(40, value));
        }

        /// <summary> Amount of times to perform a pick-up item action. </summary>
        public int PickupCount { get; set; } = 5;

        /// <summary>
        /// Wraps all items generated by the bot so that the "Drop" option is the first option when interacting with it in the player inventory.
        ///  </summary>
        /// <remarks>
        /// Doesn't wrap DIY recipes.
        /// </remarks>
        public bool WrapAllItems { get; set; } = true; // doesn't wrap DIY recipes

        /// <summary> Wrapping paper to apply when <see cref="WrapAllItems"/> is true. </summary>
        public ItemWrappingPaper WrappingPaper { get; set; } = ItemWrappingPaper.Black;

        /// <summary>
        /// Requires users to indicate they've joined the island prior to issuing drop commands.
        /// </summary>
        public bool RequireJoin { get; set; } = true;
    }
}
