using NHSE.Core;

namespace SysBot.AnimalCrossing
{
    /// <summary>
    /// Tracks the state of the Drop Bot
    /// </summary>
    public class DropBotState
    {
        public DropBotState(DropBotConfig cfg) => Config = cfg;

        public readonly DropBotConfig Config;
        private int DropCount;
        private int IdleCount;

        public bool CleanRequired => DropCount != 0 && IdleCount > Config.NoActivitySeconds;

        public void AfterDrop(int count)
        {
            DropCount += count;
            IdleCount = 0;
        }

        public void AfterClean()
        {
            DropCount = 0;
            IdleCount = 0;
        }

        public void StillIdle()
        {
            IdleCount++;
        }
    }

    public class DropBotConfig : IConfigItem
    {
        /// <summary> When enabled, bot picks up items when idle for <see cref="NoActivitySeconds"/> seconds. </summary>
        public bool AutoClean { get; set; }

        /// <summary> When <see cref="AutoClean"/> is enabled, the bot will pick up items after the a certain amount of inactive time. </summary>
        public int NoActivitySeconds { get; set; } = 60;

        /// <summary> Amount of times to perform a pick-up item action. </summary>
        public int PickupCount { get; set; } = 5;

        /// <summary>
        /// Wraps all items generated by the bot so that the "Drop" option is the first option when interacting with it in the player inventory.
        ///  </summary>
        /// <remarks>
        /// Doesn't wrap DIY recipes.
        /// </remarks>
        public bool WrapAllItems { get; set; } = true; // doesn't wrap DIY recipes

        /// <summary> Wrapping paper to apply when <see cref="WrapAllItems"/> is true. </summary>
        public ItemWrappingPaper WrappingPaper { get; set; } = ItemWrappingPaper.Black;
    }
}
